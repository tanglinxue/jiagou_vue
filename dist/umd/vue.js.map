{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\r\n * \r\n * @param {*} data 当前数据是不是对象\r\n * @returns \r\n */\r\nexport function isObject(data) {\r\n  return typeof data === 'object' && data !== null\r\n}\r\n","// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n// slice()\r\nlet oldArrayMethods = Array.prototype\r\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\r\n// arrayMethods.__proto__ = oldArrayMethods\r\nexport let arrayMethods = Object.create(oldArrayMethods)\r\n\r\nconst methods = [\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'pop',\r\n  'sort',\r\n  'splice',\r\n  'reverse'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  arrayMethods[method] = function (...args) {\r\n    console.log(args) //AOP 切片变成\r\n    oldArrayMethods[method].apply(this, args) //调用原生的数组方法\r\n    // push unshift 添加的元素可能还是一个对象\r\n    let inserted;//当前用户插入的元素\r\n    switch (method) {\r\n      case 'push':\r\n      case 'unshift':\r\n        inserted = args\r\n      case 'splice':\r\n        inserted = args.slice(2)\r\n      default:\r\n        break\r\n    }\r\n  }\r\n})\r\n","// 把data中的数据 都使用Object.defineProperty重新定义 es5\r\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\r\nimport { isObject } from '../util/index.js'\r\nimport { arrayMethods } from './array.js'\r\n\r\nclass Observer {\r\n  constructor(value) {\r\n    // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\r\n    if (Array.isArray(value)) {\r\n      // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\r\n      // 前端开发中很少很少 去操作索引 push shift unshift \r\n\r\n      value.__proto__ = arrayMethods\r\n      // console.log(value.__proto__)\r\n      // 如果数组里放的是对象我再监控\r\n      this.observerArray(value)\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n  }\r\n  observerArray(value) {\r\n    value.forEach(item => {\r\n      observe(item)\r\n    })\r\n  }\r\n  walk(data) {\r\n    let keys = Object.keys(data)\r\n    keys.forEach((key) => {\r\n      defineReactive(data, key, data[key]) //定义响应式数据\r\n    })\r\n  }\r\n}\r\n\r\nfunction defineReactive(data, key, value) {\r\n  observe(value) //递归实现深度检测\r\n  Object.defineProperty(data, key, {\r\n    configurable: true, //控制是否可以删除\r\n    enumerable: false,//控制是否可以枚举\r\n    get() {\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      console.log('更新数据')\r\n      if (newValue !== value) {\r\n        observe(newValue) //继续劫持用户设置的值，因为有可能用户设置的值是一个对象\r\n        value = newValue\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nexport function observe(data) {\r\n  let isObj = isObject(data)\r\n  if (!isObj) {\r\n    return\r\n  }\r\n  new Observer(data)\r\n}\r\n","import { observe } from './observe/index.js'\r\nexport function initState(vm) {\r\n  const opts = vm.$options\r\n  // vue的数据来源 属性 方法 数据 计算属性 watch\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n}\r\n\r\nfunction initProps() { }\r\n\r\nfunction initMethod() { }\r\n\r\nfunction initData(vm) {\r\n  // 初始化数据\r\n  let data = vm.$options.data //用户传递的data\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n  // 对象劫持 用户改变了数据 我希望可以得到通知 => 刷新页面\r\n  // MVVM 数据变化可以驱动视图变化\r\n  // Object.defineProperty() 给属性增加get方法和set方法\r\n  observe(data)  // 响应式原理\r\n}\r\n\r\nfunction initComputed() { }\r\n\r\nfunction initWatch() { }\r\n","import { initState } from './state'\r\n// 在原型上添加一个Init方法\r\nexport function initMixin(Vue) {\r\n  // 初始化流程\r\n  Vue.prototype._init = function (options) {\r\n    // 数据的劫持\r\n    const vm = this //vue中使用this.$options指代的就是用户传递的属性\r\n    vm.$options = options\r\n    //初始化状态\r\n    initState(vm)\r\n  }\r\n}\r\n","// Vue的核心代码,只是Vue的一个声明\r\nimport { initMixin } from './init'\r\nfunction Vue(options) {\r\n  //进行vue的初始化操作\r\n  this._init(options)\r\n}\r\n\r\n// 通过引入文件的方式，给Vue原型上添加方法\r\ninitMixin(Vue) //给Vue原型上添加一个_init方法\r\nexport default Vue\r\n"],"names":["isObject","data","oldArrayMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","console","log","apply","inserted","slice","Observer","value","isArray","__proto__","observerArray","walk","item","observe","keys","key","defineReactive","defineProperty","configurable","enumerable","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","initMixin","Vue","_init","options"],"mappings":"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"}