{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/**\n * \n * @param {*} data 当前数据是不是对象\n * @returns \n */\nexport function isObject(data) {\n  return typeof data === 'object' && data !== null\n}\n\n\nexport function def(data, key, value) {\n  Object.defineProperty(data, key, {\n    enumerable: false,\n    configurable: false,\n    value\n  })\n}\n","// 我要重写数组的那些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\n// slice()\nlet oldArrayMethods = Array.prototype\n// value.__proto__ = arrayMethods 原型链查找的问题， 会向上查找，先查找我重写的，重写的没有会继续向上查找\n// arrayMethods.__proto__ = oldArrayMethods\nexport let arrayMethods = Object.create(oldArrayMethods)\n\nconst methods = [\n  'push',\n  'shift',\n  'unshift',\n  'pop',\n  'sort',\n  'splice',\n  'reverse'\n]\n\nmethods.forEach(method => {\n  arrayMethods[method] = function (...args) {\n    console.log('用户调用了push方法')\n    const result = oldArrayMethods[method].apply(this, args) //调用原生的数组方法,AOP切片编程\n    // console.log(typeof result)\n    // push unshift 添加的元素可能还是一个对象\n    let inserted;//当前用户插入的元素\n    let ob = this.__ob__\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args\n        break\n      case 'splice':\n        inserted = args.slice(2)\n      default:\n        break\n    }\n    if (inserted) {\n      ob.observerArray(inserted) //将新增属性继续观测\n    }\n    return result\n  }\n})\n","// 把data中的数据 都使用Object.defineProperty重新定义 es5\n// Object.defineProperty 不能兼容ie8 及以下 vue2 无法兼容ie8版本\nimport { isObject, def } from '../util/index.js'\nimport { arrayMethods } from './array.js'\n\nclass Observer {\n  constructor(value) {\n    // vue如果数据的层次过多 需要递归的去解析对象中的属性，依次增加set和get方法\n    //我给每一个监控过得对象都增加一个__ob__属性\n    def(value, '__ob__', this)\n    if (Array.isArray(value)) {\n      // 如果是数组的话并不会对索引进行观测 因为会导致性能问题\n      // 前端开发中很少很少 去操作索引 push shift unshift \n      value.__proto__ = arrayMethods\n      // console.log(value.__proto__)\n      // 如果数组里放的是对象我再监控\n      this.observerArray(value)\n    } else {\n      this.walk(value)\n    }\n  }\n  observerArray(value) {\n    value.forEach(item => {\n      observe(item)\n    })\n  }\n  walk(data) {\n    let keys = Object.keys(data)\n    keys.forEach((key) => {\n      defineReactive(data, key, data[key]) //定义响应式数据\n    })\n  }\n}\n\nfunction defineReactive(data, key, value) {\n  observe(value) //递归实现深度检测\n  Object.defineProperty(data, key, {\n    configurable: true, //控制是否可以删除\n    enumerable: false,//控制是否可以枚举\n    get() {\n      return value\n    },\n    set(newValue) {\n      console.log('更新数据')\n      if (newValue !== value) {\n        observe(newValue) //继续劫持用户设置的值，因为有可能用户设置的值是一个对象\n        value = newValue\n      }\n    }\n  })\n}\n\nexport function observe(data) {\n  let isObj = isObject(data)\n  if (!isObj) {\n    return\n  }\n  new Observer(data)\n}\n","import { observe } from './observe/index.js'\nexport function initState(vm) {\n  const opts = vm.$options\n  // vue的数据来源 属性 方法 数据 计算属性 watch\n  if (opts.props) {\n    initProps(vm);\n  }\n  if (opts.methods) {\n    initMethod(vm);\n  }\n  if (opts.data) {\n    initData(vm);\n  }\n  if (opts.computed) {\n    initComputed(vm);\n  }\n  if (opts.watch) {\n    initWatch(vm);\n  }\n}\n\nfunction initProps() { }\n\nfunction initMethod() { }\n\nfunction initData(vm) {\n  // 初始化数据\n  let data = vm.$options.data //用户传递的data\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\n  // 对象劫持 用户改变了数据 我希望可以得到通知 => 刷新页面\n  // MVVM 数据变化可以驱动视图变化\n  // Object.defineProperty() 给属性增加get方法和set方法\n  observe(data)  // 响应式原理\n}\n\nfunction initComputed() { }\n\nfunction initWatch() { }\n","// ast语法树 是用对象来描述原生语法的   虚拟dom 用对象来描述dom节点的\n// ?:匹配不捕获\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`; // abc-aaa\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <aaa:asdads>\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的 >  <div>\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\n\nlet root = null; // ast语法树的树根\nlet currentParent; // 标识当前父亲是谁\nlet stack = [];\nconst ELEMENT_TYPE = 1;\nconst TEXT_TYPE = 3;\n\nfunction createASTElement(tagName, attrs) {\n  return {\n    tag: tagName,\n    type: ELEMENT_TYPE,\n    children: [],\n    attrs,\n    parent: null\n  }\n}\n\nfunction start(tagName, attrs) {\n  // 遇到开始标签 就创建一个ast元素s\n  let element = createASTElement(tagName, attrs)\n  if (!root) {\n    root = element\n  }\n  currentParent = element // 把当前元素标记成父ast树\n  stack.push(element); // 将开始标签存放到栈中\n}\n\nfunction end(tagName) {\n  let element = stack.pop()\n  currentParent = stack[stack.length - 1]\n  if (currentParent) {\n    element.parent = currentParent\n    currentParent.children.push(element)\n  }\n}\n\nfunction chars(text) {\n  text = text.replace(/\\s/g, '');\n  if (text) {\n    currentParent.children.push({\n      text,\n      type: TEXT_TYPE\n    })\n  }\n}\n\nexport function parseHTML(html) {\n  console.log(html)\n  while (html) {\n    let textEnd = html.indexOf('<')\n    // console.log(textEnd)\n    if (textEnd == 0) {\n      // 如果当前索引为0 肯定是一个标签 开始标签 结束标签\n      let startTagMatch = parseStartTag()// 通过这个方法获取到匹配的结果 tagName,attrs\n      if (startTagMatch) {\n        start(startTagMatch.tagName, startTagMatch.attrs)\n        continue\n      }\n      let endTagMatch = html.match(endTag)\n      if (endTagMatch) {\n        advance(endTagMatch[0].length)\n        end(endTagMatch[1])\n        continue\n      }\n\n    }\n    let text;\n    if (textEnd >= 0) {\n      text = html.substring(0, textEnd)\n    }\n    if (text) {\n      advance(text.length)\n      chars(text)\n      continue\n    }\n  }\n  function advance(n) {\n    html = html.substring(n)\n  }\n  function parseStartTag() {\n    let start = html.match(startTagOpen)\n    if (start) {\n      const match = {\n        tagName: start[1],\n        attrs: []\n      }\n      advance(start[0].length)\n      let end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length) // 将属性去掉\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n      }\n      if (end) { //去掉开始标签的>\n        advance(end[0].length)\n\n        return match\n      }\n    }\n  }\n  return root\n}\n","import { parseHTML } from './parser-html'\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g\nfunction genProps(attrs) {\n  let str = ''\n  attrs.forEach(item => {\n    if (item.name === 'style') {\n      let obj = {}\n      item.value.split(';').forEach(bitem => {\n        let [key, value] = bitem.split(':')\n        obj[key] = value\n      })\n      item.value = obj\n    }\n    str += `${item.name}:${JSON.stringify(item.value)},`\n  })\n  return `{${str.slice(0, -1)}}`\n}\nfunction genChildren(el) {\n  const children = el.children\n  if (children.length) {\n    return `${children.map(c => gen(c)).join(',')}`\n  } else {\n    return false\n  }\n}\nfunction gen(node) {\n  if (node.type == 1) {\n    return generate(node)\n  } else {\n    let text = node.text\n    let tokens = []\n    let match, index;\n    let lastIndex = defaultTagRE.lastIndex = 0\n    console.log(text)\n    while (match = defaultTagRE.exec(text)) {\n      index = match.index\n      console.log(match)\n      if (index > lastIndex) {\n        tokens.push(JSON.stringify(text.slice(lastIndex, index)))\n      }\n      tokens.push(`_s(${match[1].trim()})`)\n      lastIndex = index + match[0].length\n    }\n    if (lastIndex < text.length) {\n      tokens.push(JSON.stringify(text.slice(lastIndex)))\n    }\n\n    return `_v(${tokens.join('+')})`\n  }\n}\nfunction generate(el) {\n  const children = genChildren(el)\n  let code = `_c(\"${el.tag}\",${el.attrs.length ? genProps(el.attrs) : 'undefined'\n    }${children ? `,${children}` : ''})`\n\n  return code\n}\nexport function compileToFunction(template) {\n  // 1) 解析html字符串 将html字符串 => ast语法树\n  let root = parseHTML(template)\n  // console.log(root)\n  // 需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\n  let code = generate(root)\n  console.log(code)\n  // 核心思路就是将模板转化成 下面这段字符串\n  return function render() {\n  }\n}\n","import { initState } from './state'\nimport { compileToFunction } from './compiler/index.js'\n// 在原型上添加一个Init方法\nexport function initMixin(Vue) {\n  // 初始化流程\n  Vue.prototype._init = function (options) {\n    // 数据的劫持\n    const vm = this //vue中使用this.$options指代的就是用户传递的属性\n    vm.$options = options\n    //初始化状态\n    initState(vm)\n\n    // 如果用户传入了el属性，需要将页面渲染出来\n    // 如果用户传入了el 就要实现挂载流程\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el)\n    }\n\n  }\n  Vue.prototype.$mount = function (el) {\n    const vm = this;\n    const options = vm.$options\n    el = document.querySelector(el)\n    //默认会先查找有没有render方法，没有render会采用template，template也没有就用el中的内容\n    if (!options.render) {\n      // 对模板进行编译\n      let template = options.template\n      if (!template && el) {\n        template = el.outerHTML\n      }\n      // 我们需要将template 转化成render方法 vue1.0 2.0虚拟dom\n      const render = compileToFunction(template)\n      options.render = render\n    }\n  }\n}\n","// Vue的核心代码,只是Vue的一个声明\nimport { initMixin } from './init'\nfunction Vue(options) {\n  //进行vue的初始化操作\n  this._init(options)\n}\n\n// 通过引入文件的方式，给Vue原型上添加方法\ninitMixin(Vue) //给Vue原型上添加一个_init方法\nexport default Vue\n"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","observerArray","Observer","isArray","__proto__","walk","item","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","root","currentParent","stack","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","parent","start","element","push","end","pop","length","chars","text","replace","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","bitem","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","render","initMixin","Vue","_init","options","$mount","document","querySelector","outerHTML"],"mappings":"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"}